PROFILE_STARTUP=false

if [[ $PROFILE_STARTUP == true ]]; then
    zmodload zsh/zprof
fi

if [[ $ZDOTDIR/.zshrc.zwc -nt $ZDOTDIR/.zshrc ]]; then
    ZSHRC_MODIFIED=false
else
    ZSHRC_MODIFIED=true
fi

################################## FUNCTIONS ##################################
zrecompile() {
    local file="$1"
    if [[ -a "$file" && ( ! -a "$file.zwc" || "$file" -nt "$file.zwc") ]]; then
        zcompile "$file"
    fi
}

batch_zrecompile() {
    while read file; do
        zrecompile "$file"
    done
}

zshrc_modified() {
    if [[ $ZSHRC_MODIFIED == true ]]; then
        return 0
    else
        return 1
    fi
}

create-custom-make-function() {
    local function_name="$1"
    local dir="$2"

    eval "${function_name}() {
        local task=\"\$1\"
        title \"\$task\"
        make --directory \"$dir\" \"\$task\"
    }"

    eval "_${function_name}() {
        cd \"$dir\"
        _make
        cd - &> /dev/null
    }"

    compdef "_$function_name" "$function_name"

}

############################## EXPOSED FUNCTIONS ##############################
man() {
    env \
        LESS_TERMCAP_mb="$(printf '\e[1;31m')" \
        LESS_TERMCAP_md="$(printf '\e[1;36m')" \
        LESS_TERMCAP_me="$(printf '\e[0m')" \
        LESS_TERMCAP_se="$(printf '\e[0m')" \
        LESS_TERMCAP_so="$(printf '\e[1;30;40m')" \
        LESS_TERMCAP_ue="$(printf '\e[0m')" \
        LESS_TERMCAP_us="$(printf '\e[1;32m')" \
        _NROFF_U=1 \
        PATH="$HOME/bin:$PATH" \
            man "$@"
}


git-default-branch() {
    git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
}

git-clean-branches() {
    git branch --merged | egrep -v "(^\*|master|main|dev|develop)" | xargs -r git branch -d
}

# From https://github.com/yramagicman/zsh-aliases/blob/master/functions/json
json() {
  if [ -t 0 ]; then
    python -mjson.tool <<<"$*" | pygmentize -l javascript
  else # pipe
    python -mjson.tool | pygmentize -l javascript
  fi
}

mkcd() {
    mkdir -p "$1" && cd "$1"
}

title() {
  print -Pn "\e]2;${@:q}\a"
}

zgen() {
    source "$ZGEN_DIR/zgen.zsh"
    zgen "$*"
}

#################################### STEPS ####################################
step_theme() {
    source <(starship init zsh --print-full-init)
}

step_load_asdf() {
    if [[ -d "$XDG_DATA_HOME/asdf" ]]; then
        source "$XDG_DATA_HOME/asdf/asdf.sh"
        fpath=($XDG_DATA_HOME/asdf/completions $fpath)
        source "$ASDF_DATA_DIR/plugins/java/set-java-home.zsh"
    fi
}

step_plugins() {
    __source() {
        if zshrc_modified; then
            return 1
        fi

        source "$ZGEN_DIR/init.zsh" || return 1
        return 0
    }

    __config() {
        zgen reset

        zgen oh-my-zsh
        zgen oh-my-zsh plugins/docker
        zgen oh-my-zsh plugins/docker-compose
        zgen oh-my-zsh plugins/git
        zgen oh-my-zsh plugins/gitfast
        zgen oh-my-zsh plugins/npm
        zgen oh-my-zsh plugins/yarn

        # needs to be loaded before zsh-history-substring-search
        zgen load zdharma/fast-syntax-highlighting

        zgen load zsh-users/zsh-autosuggestions
        zgen load zsh-users/zsh-completions
        zgen load zsh-users/zsh-history-substring-search

        zgen load agkozak/zsh-z
        zgen load djui/alias-tips
        # zgen load MichaelAquilina/zsh-autoswitch-virtualenv

        zgen save

        zgen init

        find "$ZDOTDIR" -type f \
            -name '*.zsh' \
            -not -path '*.git*' -not -path '*test-data*' -not -path '*/tests/*' \
            | batch_zrecompile
        find "$ZDOTDIR" -type f \
            -not -name '*.*' -not -name 'README' -not -name 'LICENSE' -not -name 'chucknorris' \
            -not -path '*.git*' -not -path '*test-data*' -not -path '*/tests/*' \
            | batch_zrecompile
    }

    export ZGEN_DIR=$ZDOTDIR/zgen

    # oh-my-zsh
    export DISABLE_AUTO_UPDATE=true

    # autosuggestions
    export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
    export ZSH_AUTOSUGGEST_MANUAL_REBIND=true
    export ZSH_AUTOSUGGEST_USE_ASYNC=true

    # zsh-z
    export ZSHZ_CMD=j
    export ZSHZ_CASE=ignore
    export ZSHZ_DATA="$ZDOTDIR/.zsh-z-data"

    if ! __source; then
        __config
    fi

    unset -f __source
    unset -f __config
}

step_alias() {
    alias ls='ls --color=auto'
    alias lsa='ls -a'
    alias ll='ls -lh'
    alias lla='ls -lha'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'

    alias ..='cd ..'
    alias ...='cd ../..'
    alias ....='cd ../../..'
    alias ~='cd ~'
    alias -- c-='cd -'
    alias -- -='cd -'
    alias -- -2='cd -2'
    alias -- -3='cd -3'
    alias -- -4='cd -4'
    alias -- -5='cd -5'

    alias cdg='grt'
    alias cdf='grt'

    alias copy='clipcopy'
    alias open='xdg-open'

    alias d='dirs -v | head -10'
    alias x='exit'

    alias -- g-='git checkout -'
    alias -- gco-='git checkout -'
    alias gcom='git checkout $(git-default-branch)'
    alias grbim='git fetch && git rebase -i refs/remotes/origin/$(git-default-branch)'
    alias grbmi='grbim'

    alias tis='tig status'
    alias til='tig log'
    alias tib='tig blame -C'

    alias codium="flatpak run com.vscodium.codium"

    unalias _
}

step_style() {
    # http://geoff.greer.fm/lscolors/
    export LSCOLORS='ExfxcxdxbxegedabagExEx'
    export LS_COLORS='di=1;34:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=1;34:ow=1;34'

    zstyle ':completion:*' auto-description 'specify: %d'
    zstyle ':completion:*' completer _expand _complete _correct _approximate
    zstyle ':completion:*' group-name ''
    zstyle ':completion:*:default' list-colors "${(s.:.)${LS_COLORS:?}}"
    zstyle ':completion:*' list-colors "${(s.:.)${LS_COLORS:?}}"
    zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
    zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
    zstyle ':completion:*' use-compctl false
    zstyle ':completion:*' verbose true

    zstyle ':completion:*' menu select
    zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'

    zstyle ':completion:*:*:docker:*' option-stacking yes
    zstyle ':completion:*:*:docker-*:*' option-stacking yes

    zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
    zstyle ':completion:*:kill:*' command "ps -u \$USER -o pid,%cpu,tty,cputime,cmd"

    # remove paste text delay
    zstyle ':bracketed-paste-magic' active-widgets '.self-*'

    # Keep directories and files separated
    zstyle ':completion:*' list-dirs-first true
}

step_history() {
    export HISTSIZE=1000
    export SAVEHIST=1000
    export HISTFILE=$ZDOTDIR/.zsh_history

    # http://zsh.sourceforge.net/Doc/Release/Options.html#History
    setopt append_history
    setopt hist_expire_dups_first
    setopt hist_ignore_all_dups
    setopt hist_ignore_dups
    setopt hist_ignore_space
    setopt hist_reduce_blanks
    setopt hist_save_no_dups
    setopt hist_verify
    setopt inc_append_history
}

step_keybinding() {
    ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-substring-search-up history-substring-search-down)
    ZSH_AUTOSUGGEST_CLEAR_WIDGETS=("${(@)ZSH_AUTOSUGGEST_CLEAR_WIDGETS:#(up|down)-line-or-history}")

    export KEYTIMEOUT=1
    bindkey -v

    # delete on delete or backspace
    bindkey '^?' backward-delete-char
    bindkey '^H' backward-kill-word
    bindkey '^[[3~' delete-char
    bindkey '^[[3;5~' kill-word

    # go back in menu on shift+tab
    bindkey '^[[Z' reverse-menu-complete

    # search on up and down arrow
    bindkey '^[OA' history-substring-search-up
    bindkey '^[OB' history-substring-search-down

    # go to begin or end of line on home and end
    bindkey '^[[H' beginning-of-line
    bindkey '^[[F' end-of-line

    # go to previous or next word on ctrl+arrow
    bindkey '^[[1;5C' forward-word
    bindkey '^[[1;5D' backward-word

    # search on ctrl+r
    bindkey '^R' history-incremental-search-backward
}

step_compile_zsh_files() {
    if zshrc_modified; then
        zrecompile "$ZDOTDIR/.zshrc"
        zrecompile "$ZDOTDIR/.zcompdump"
    fi
}

step_terminal_title() {
    # based on https://github.com/robbyrussell/oh-my-zsh/blob/master/lib/termsupport.zsh
    __precmd() {
        title "%~"
    }

    precmd_functions+=(__precmd)
}

#################################### START ####################################
step_theme
step_load_asdf
step_plugins
step_alias
step_style
step_history
step_keybinding
step_compile_zsh_files
step_terminal_title

# completion
setopt listpacked # make completion columns with different widths

# changing directories
# enable 'cd -N' commands
setopt auto_pushd
setopt pushd_minus
setopt pushd_silent

if [[ $PROFILE_STARTUP == true ]]; then
    zprof
fi

unset PROFILE_STARTUP
unset ZSHRC_MODIFIED
unset -f zrecompile
unset -f batch_zrecompile
unset -f zshrc_modified
unset -f create-custom-make-function
unset -f step_theme
unset -f step_load_asdf
unset -f step_plugins
unset -f step_alias
unset -f step_style
unset -f step_history
unset -f step_keybinding
unset -f step_compile_zsh_files
unset -f step_terminal_title
